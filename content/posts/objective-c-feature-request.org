#+title: Objective-C Feature Request
#+date: <2008-08-23>
#+category: ObjectiveC

#+attr_html: :alt Dictionary Icon :align right
[[file:dictionary.png]]

Objective-C, particularly after it became 2.0, is my favourite language.
It's partly because of the language itself, but I guess mostly because
of the libraries. The Cocoa libraries are /awesome/.

For the most part. No software is perfect, and even in Cocoa there are
things that could be improved. One thing that continue to trip me up is
one of =NSDictionary='s initialiser methods.

#+BEGIN_QUOTE
  Dear Apple,

  The =dictionaryWithObjectsAndKeys:= always end up confusing me, as the
  arguments always seem in the wrong order. It would make much more
  sense to have the method =dictionaryWithKeysAndObjects:= where you
  specified a list of key/value pairs, rather than value/key pairs.

  Yours Sincerely,

  Stig
#+END_QUOTE

Here's a random sample of the above from the [[http://www.adiumx.com/][Adium]] source code.
Honestly. I grabbed the first sample from it I could find. I did not
hunt for a particularly egregious example:

#+BEGIN_SRC objc
  NSDictionary *userInfo = [NSDictionary dictionaryWithObjectsAndKeys:
      [NSValue valueWithPointer:SecKeychainLockAll],
          AIKEYCHAIN_ERROR_USERINFO_SECURITYFUNCTION,
      @"SecKeychainLockAll",
          AIKEYCHAIN_ERROR_USERINFO_SECURITYFUNCTIONNAME,
      AI_LOCALIZED_SECURITY_ERROR_DESCRIPTION(err),
          AIKEYCHAIN_ERROR_USERINFO_ERRORDESCRIPTION,
      nil];
#+END_SRC

Doesn't that make a lot more sense like this?

#+BEGIN_SRC objc
    NSDictionary *userInfo = [NSDictionary dictionaryWithKeysAndObjects:
        AIKEYCHAIN_ERROR_USERINFO_SECURITYFUNCTION,
            [NSValue valueWithPointer:SecKeychainLockAll],
        AIKEYCHAIN_ERROR_USERINFO_SECURITYFUNCTIONNAME,
            @"SecKeychainLockAll",
        AIKEYCHAIN_ERROR_USERINFO_ERRORDESCRIPTION,
            AI_LOCALIZED_SECURITY_ERROR_DESCRIPTION(err),
        nil];
#+END_SRC

This has confused me so many times now that I have filed a feature
request with Apple (<rdar://problem/6171269>) to have a new method
with the arguments in the "right" order. (Wondering if that URL is
broken? Read about how [[https://web.archive.org/web/20160809030838/http://iphonedevelopment.blogspot.co.uk/2008/10/radar-urls-bug-reporting.html][rdar URLs only work for Apple]].) Here's to
hoping that they honour it and put it in Snow Leopard...

#  LocalWords:  initialiser dictionaryWithObjectsAndKeys Adium objc
#  LocalWords:  dictionaryWithKeysAndObjects userInfo NSValue rdar
#  LocalWords:  valueWithPointer SecKeychainLockAll AIKEYCHAIN
#  LocalWords:  SECURITYFUNCTION SECURITYFUNCTIONNAME LOCALIZED
#  LocalWords:  ERRORDESCRIPTION
