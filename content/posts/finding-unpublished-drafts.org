#+title: Finding unpublished drafts
#+date: <2018-06-25>
#+category: Emacs
#+category: Org
Now I have a convenient way to publish my drafts, by linking them into
the index page, I need to have a way to conveniently /find/ my drafts.
So naturally I wrote an Emacs function for that too. I get a list of
all the Org files in the =articles/= directory, and remove the ones that
are already linked to from =index.org=. The rest I present as a list of
links in a temporary org buffer, so I can just click on each one to
open it in Emacs.

#+BEGIN_SRC emacs-lisp -n -r
  (defun sb/find-drafts ()
    "Find org files in `~/blog/articles' not already linked from
		`~/blog/index.org'."
    (interactive)
    (let* ((prefix (expand-file-name "~/blog/"))

	   (posts
	    (directory-files-recursively
	     (concat prefix "articles") ".org"))

	   (index-contents
	    (get-string-from-file
	     (concat prefix "index.org")))

	   (drafts
	    (cl-remove-if
	     (lambda (needle)
	       (string-match
		(string-remove-prefix prefix needle)
		index-contents))
	     posts))

	   (buffer-name "*blog drafts*"))

      (if drafts
	  (progn
	    (with-current-buffer
		(get-buffer-create buffer-name)
	      (erase-buffer)
	      (org-mode)
	      (insert
	       (mapconcat
		(lambda (entry)
		  (format "- file:%s" entry))
		drafts
		"\n"))
	      (buffer-string))
	    (unless
		(get-buffer-window buffer-name t)
	      (pop-to-buffer buffer-name nil t))
	    (shrink-window-if-larger-than-buffer
	     (get-buffer-window buffer-name)))
	(message "No drafts could be found!"))))
#+END_SRC

* Abstract                                                         :noexport:

I close the loop of

#  LocalWords:  SRC
