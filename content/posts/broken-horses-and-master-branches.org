#+title: On broken horses & master branches
#+date: <2020-10-13>
#+category: Soapbox
Every time I start learning to ride I get disillusioned and give up
due to two things; the cost, and the /terminology/. Referring to a horse
as /broken/[fn::Using the term /trained/ is thankfully becoming more
common, including on [[https://en.wikipedia.org/wiki/Horse_training][Wikipedia]].] is still common, and it troubles me.

My own field has its own [[https://tools.ietf.org/id/draft-knodel-terminology-00.html][problematic terminology]]. I've been
uncomfortable using =master= as the default branch in my Git
repositories for a while. Yet, I've continued to use it in part due to
inertia, and part analysis paralysis regarding what to use /instead/.
Recent events made me think, however.

If a word used to describe training horses makes me so uncomfortable
that it puts me off learning to ride, why am I still using the branch
name =master= in my repos? /No more/: this summer I changed the default
branch from =master= to =trunk=[fn::Why choose =trunk=, when it looks like
=main= is [[https://www.bbc.co.uk/news/technology-53050955][gaining traction]] as a more popular alternative? I'm used to
speaking of [[https://trunkbaseddevelopment.com/][trunk-based development]], and I'm old enough that I
remember using =trunk= with previous VCSs. And =trunk= plays into the
/branch/ metaphor of Git much better than =main= does, in my opinion.]
across all my repos.

I don't want to deflect from tackling important systemic injustices.
In the wider context renaming the default branch in my project repos
is small potatoes, for sure. But it is one I /can/ do, as an
individual, on my free time.

* Abstract                                                         :noexport:

I explain why I chose to rename the =master= branch in my Git
repos to =trunk=.

#  LocalWords:  repos VCSs
