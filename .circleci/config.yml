version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.11

executors:
  emacs26:
    working_directory: ~/blog
    docker:
      - image: silex/emacs:master
  python3:
    docker:
      - image: circleci/python:3.7

commands:
  configure-emacs:
    steps:
      - run:
          name: "Checkout Emacs Config"
          command: git clone https://github.com/stig/.emacs.d.git ~/emacs.d
      - run:
          name: "Tangle relevant Emacs config files"
          command: >
            emacs --batch
            --eval "(require 'ob-tangle)"
            --eval '(org-babel-tangle-file "~/emacs.d/README.org")'
            --eval '(org-babel-tangle-file "~/emacs.d/Blogging.org")'

jobs:
  build:
    executor: emacs26
    steps:
      - checkout
      - configure-emacs
      - restore_cache:
          keys:
            - v5-org-{{ .Branch }}
            - v5-org-trunk
      - run:
          name: Tangle CSS
          command: >
            emacs --batch
            --eval "(require 'ob-tangle)"
            --eval '(org-babel-tangle-file "etc/style.org")'
# TODO: Tangle to a different file above, and insert a "dropcss" step here to remove unnused styles
      - run:
          name: Publish Blog
          command: >
            emacs --batch
            --load ~/.emacs.d/init.el
            --funcall org-publish-all
      - store_artifacts:
          path: ~/public_html
      - save_cache:
          key: v5-org-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.emacs.d
      - persist_to_workspace:
          root: ~/public_html
          paths:
            - '*'

  deploy:
    executor: python3
    steps:
      - attach_workspace:
          at: ~/public_html
      - aws-s3/sync:
          from: ~/public_html
          to: 's3://www.brautaset.org'
          arguments: >-
            --delete
            --exclude '*'
            --include '*.png'
            --include '*.pdf'
            --include '*.jpg'
            --include '*.html'
            --include '*.css'
            --include '*.xml'
            --acl public-read
            --cache-control "max-age=86400"
      - run: >-
          aws cloudfront create-invalidation
          --distribution-id E2HQ2C8QF1FXUZ
          --paths '/*'

workflows:
  version: 2

  pr:
    jobs:
      - build:
          filters:
            branches:
              ignore: trunk

  deploy:
    jobs:
      - build:
          filters:
            branches:
              only: trunk
      - deploy:
          requires:
            - build
